//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wpf_Sample.WcfSample {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfSample.ISampleWcfService")]
    public interface ISampleWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleWcfService/GetMessage", ReplyAction="http://tempuri.org/ISampleWcfService/GetMessageResponse")]
        string GetMessage(string key);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISampleWcfService/GetMessage", ReplyAction="http://tempuri.org/ISampleWcfService/GetMessageResponse")]
        System.IAsyncResult BeginGetMessage(string key, System.AsyncCallback callback, object asyncState);
        
        string EndGetMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleWcfService/MakeError", ReplyAction="http://tempuri.org/ISampleWcfService/MakeErrorResponse")]
        void MakeError();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISampleWcfService/MakeError", ReplyAction="http://tempuri.org/ISampleWcfService/MakeErrorResponse")]
        System.IAsyncResult BeginMakeError(System.AsyncCallback callback, object asyncState);
        
        void EndMakeError(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISampleWcfServiceChannel : Wpf_Sample.WcfSample.ISampleWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SampleWcfServiceClient : System.ServiceModel.ClientBase<Wpf_Sample.WcfSample.ISampleWcfService>, Wpf_Sample.WcfSample.ISampleWcfService {
        
        private BeginOperationDelegate onBeginGetMessageDelegate;
        
        private EndOperationDelegate onEndGetMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginMakeErrorDelegate;
        
        private EndOperationDelegate onEndMakeErrorDelegate;
        
        private System.Threading.SendOrPostCallback onMakeErrorCompletedDelegate;
        
        public SampleWcfServiceClient() {
        }
        
        public SampleWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SampleWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SampleWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SampleWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetMessageCompletedEventArgs> GetMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MakeErrorCompleted;
        
        public string GetMessage(string key) {
            return base.Channel.GetMessage(key);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMessage(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMessage(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetMessage(System.IAsyncResult result) {
            return base.Channel.EndGetMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return this.BeginGetMessage(key, callback, asyncState);
        }
        
        private object[] OnEndGetMessage(System.IAsyncResult result) {
            string retVal = this.EndGetMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMessageCompleted(object state) {
            if ((this.GetMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMessageCompleted(this, new GetMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMessageAsync(string key) {
            this.GetMessageAsync(key, null);
        }
        
        public void GetMessageAsync(string key, object userState) {
            if ((this.onBeginGetMessageDelegate == null)) {
                this.onBeginGetMessageDelegate = new BeginOperationDelegate(this.OnBeginGetMessage);
            }
            if ((this.onEndGetMessageDelegate == null)) {
                this.onEndGetMessageDelegate = new EndOperationDelegate(this.OnEndGetMessage);
            }
            if ((this.onGetMessageCompletedDelegate == null)) {
                this.onGetMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetMessageDelegate, new object[] {
                        key}, this.onEndGetMessageDelegate, this.onGetMessageCompletedDelegate, userState);
        }
        
        public void MakeError() {
            base.Channel.MakeError();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMakeError(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMakeError(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndMakeError(System.IAsyncResult result) {
            base.Channel.EndMakeError(result);
        }
        
        private System.IAsyncResult OnBeginMakeError(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginMakeError(callback, asyncState);
        }
        
        private object[] OnEndMakeError(System.IAsyncResult result) {
            this.EndMakeError(result);
            return null;
        }
        
        private void OnMakeErrorCompleted(object state) {
            if ((this.MakeErrorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MakeErrorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MakeErrorAsync() {
            this.MakeErrorAsync(null);
        }
        
        public void MakeErrorAsync(object userState) {
            if ((this.onBeginMakeErrorDelegate == null)) {
                this.onBeginMakeErrorDelegate = new BeginOperationDelegate(this.OnBeginMakeError);
            }
            if ((this.onEndMakeErrorDelegate == null)) {
                this.onEndMakeErrorDelegate = new EndOperationDelegate(this.OnEndMakeError);
            }
            if ((this.onMakeErrorCompletedDelegate == null)) {
                this.onMakeErrorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMakeErrorCompleted);
            }
            base.InvokeAsync(this.onBeginMakeErrorDelegate, null, this.onEndMakeErrorDelegate, this.onMakeErrorCompletedDelegate, userState);
        }
    }
}
